16c2c279c47a6bc27bfa4eaae3ec2630
'use strict';

var React = require('React');

var SafeAreaView = require('SafeAreaView');

var StyleSheet = require('StyleSheet');

var Text = require('Text');

var View = require('View');

var YellowBoxPressable = require('YellowBoxPressable');

var YellowBoxStyle = require('YellowBoxStyle');

var YellowBoxInspectorFooter = function YellowBoxInspectorFooter(props) {
  return React.createElement(View, {
    style: styles.root
  }, React.createElement(YellowBoxPressable, {
    backgroundColor: {
      default: 'transparent',
      pressed: YellowBoxStyle.getHighlightColor(1)
    },
    onPress: props.onMinimize,
    style: styles.button
  }, React.createElement(View, {
    style: styles.content
  }, React.createElement(Text, {
    style: styles.label
  }, "Minimize")), React.createElement(SafeAreaView, null)), React.createElement(YellowBoxPressable, {
    backgroundColor: {
      default: 'transparent',
      pressed: YellowBoxStyle.getHighlightColor(1)
    },
    onPress: props.onDismiss,
    style: styles.button
  }, React.createElement(View, {
    style: styles.content
  }, React.createElement(Text, {
    style: styles.label
  }, "Dismiss")), React.createElement(SafeAreaView, null)));
};

var styles = StyleSheet.create({
  root: {
    backgroundColor: YellowBoxStyle.getBackgroundColor(0.95),
    flexDirection: 'row'
  },
  button: {
    flex: 1
  },
  content: {
    alignItems: 'center',
    height: 48,
    justifyContent: 'center'
  },
  label: {
    color: YellowBoxStyle.getTextColor(1),
    fontSize: 14,
    includeFontPadding: false,
    lineHeight: 18
  }
});
module.exports = YellowBoxInspectorFooter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlllbGxvd0JveEluc3BlY3RvckZvb3Rlci5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJTYWZlQXJlYVZpZXciLCJTdHlsZVNoZWV0IiwiVGV4dCIsIlZpZXciLCJZZWxsb3dCb3hQcmVzc2FibGUiLCJZZWxsb3dCb3hTdHlsZSIsIlllbGxvd0JveEluc3BlY3RvckZvb3RlciIsInByb3BzIiwic3R5bGVzIiwicm9vdCIsImRlZmF1bHQiLCJwcmVzc2VkIiwiZ2V0SGlnaGxpZ2h0Q29sb3IiLCJvbk1pbmltaXplIiwiYnV0dG9uIiwiY29udGVudCIsImxhYmVsIiwib25EaXNtaXNzIiwiY3JlYXRlIiwiYmFja2dyb3VuZENvbG9yIiwiZ2V0QmFja2dyb3VuZENvbG9yIiwiZmxleERpcmVjdGlvbiIsImZsZXgiLCJhbGlnbkl0ZW1zIiwiaGVpZ2h0IiwianVzdGlmeUNvbnRlbnQiLCJjb2xvciIsImdldFRleHRDb2xvciIsImZvbnRTaXplIiwiaW5jbHVkZUZvbnRQYWRkaW5nIiwibGluZUhlaWdodCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOztBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUE1Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUNBLElBQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxrQkFBa0IsR0FBR0wsT0FBTyxDQUFDLG9CQUFELENBQWxDOztBQUNBLElBQU1NLGNBQWMsR0FBR04sT0FBTyxDQUFDLGdCQUFELENBQTlCOztBQU9BLElBQU1PLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBMkIsQ0FBQ0MsS0FBRDtBQUFBLFNBQy9CLG9CQUFDLElBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRUMsTUFBTSxDQUFDQztBQUFwQixLQUNFLG9CQUFDLGtCQUFEO0FBQ0UsSUFBQSxlQUFlLEVBQUU7QUFDZkMsTUFBQUEsT0FBTyxFQUFFLGFBRE07QUFFZkMsTUFBQUEsT0FBTyxFQUFFTixjQUFjLENBQUNPLGlCQUFmLENBQWlDLENBQWpDO0FBRk0sS0FEbkI7QUFLRSxJQUFBLE9BQU8sRUFBRUwsS0FBSyxDQUFDTSxVQUxqQjtBQU1FLElBQUEsS0FBSyxFQUFFTCxNQUFNLENBQUNNO0FBTmhCLEtBT0Usb0JBQUMsSUFBRDtBQUFNLElBQUEsS0FBSyxFQUFFTixNQUFNLENBQUNPO0FBQXBCLEtBQ0Usb0JBQUMsSUFBRDtBQUFNLElBQUEsS0FBSyxFQUFFUCxNQUFNLENBQUNRO0FBQXBCLGdCQURGLENBUEYsRUFVRSxvQkFBQyxZQUFELE9BVkYsQ0FERixFQWFFLG9CQUFDLGtCQUFEO0FBQ0UsSUFBQSxlQUFlLEVBQUU7QUFDZk4sTUFBQUEsT0FBTyxFQUFFLGFBRE07QUFFZkMsTUFBQUEsT0FBTyxFQUFFTixjQUFjLENBQUNPLGlCQUFmLENBQWlDLENBQWpDO0FBRk0sS0FEbkI7QUFLRSxJQUFBLE9BQU8sRUFBRUwsS0FBSyxDQUFDVSxTQUxqQjtBQU1FLElBQUEsS0FBSyxFQUFFVCxNQUFNLENBQUNNO0FBTmhCLEtBT0Usb0JBQUMsSUFBRDtBQUFNLElBQUEsS0FBSyxFQUFFTixNQUFNLENBQUNPO0FBQXBCLEtBQ0Usb0JBQUMsSUFBRDtBQUFNLElBQUEsS0FBSyxFQUFFUCxNQUFNLENBQUNRO0FBQXBCLGVBREYsQ0FQRixFQVVFLG9CQUFDLFlBQUQsT0FWRixDQWJGLENBRCtCO0FBQUEsQ0FBakM7O0FBNkJBLElBQU1SLE1BQU0sR0FBR1AsVUFBVSxDQUFDaUIsTUFBWCxDQUFrQjtBQUMvQlQsRUFBQUEsSUFBSSxFQUFFO0FBQ0pVLElBQUFBLGVBQWUsRUFBRWQsY0FBYyxDQUFDZSxrQkFBZixDQUFrQyxJQUFsQyxDQURiO0FBRUpDLElBQUFBLGFBQWEsRUFBRTtBQUZYLEdBRHlCO0FBSy9CUCxFQUFBQSxNQUFNLEVBQUU7QUFDTlEsSUFBQUEsSUFBSSxFQUFFO0FBREEsR0FMdUI7QUFRL0JQLEVBQUFBLE9BQU8sRUFBRTtBQUNQUSxJQUFBQSxVQUFVLEVBQUUsUUFETDtBQUVQQyxJQUFBQSxNQUFNLEVBQUUsRUFGRDtBQUdQQyxJQUFBQSxjQUFjLEVBQUU7QUFIVCxHQVJzQjtBQWEvQlQsRUFBQUEsS0FBSyxFQUFFO0FBQ0xVLElBQUFBLEtBQUssRUFBRXJCLGNBQWMsQ0FBQ3NCLFlBQWYsQ0FBNEIsQ0FBNUIsQ0FERjtBQUVMQyxJQUFBQSxRQUFRLEVBQUUsRUFGTDtBQUdMQyxJQUFBQSxrQkFBa0IsRUFBRSxLQUhmO0FBSUxDLElBQUFBLFVBQVUsRUFBRTtBQUpQO0FBYndCLENBQWxCLENBQWY7QUFxQkFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFCLHdCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ1JlYWN0Jyk7XG5jb25zdCBTYWZlQXJlYVZpZXcgPSByZXF1aXJlKCdTYWZlQXJlYVZpZXcnKTtcbmNvbnN0IFN0eWxlU2hlZXQgPSByZXF1aXJlKCdTdHlsZVNoZWV0Jyk7XG5jb25zdCBUZXh0ID0gcmVxdWlyZSgnVGV4dCcpO1xuY29uc3QgVmlldyA9IHJlcXVpcmUoJ1ZpZXcnKTtcbmNvbnN0IFllbGxvd0JveFByZXNzYWJsZSA9IHJlcXVpcmUoJ1llbGxvd0JveFByZXNzYWJsZScpO1xuY29uc3QgWWVsbG93Qm94U3R5bGUgPSByZXF1aXJlKCdZZWxsb3dCb3hTdHlsZScpO1xuXG50eXBlIFByb3BzID0gJFJlYWRPbmx5PHt8XG4gIG9uRGlzbWlzczogKCkgPT4gdm9pZCxcbiAgb25NaW5pbWl6ZTogKCkgPT4gdm9pZCxcbnx9PjtcblxuY29uc3QgWWVsbG93Qm94SW5zcGVjdG9yRm9vdGVyID0gKHByb3BzOiBQcm9wcyk6IFJlYWN0Lk5vZGUgPT4gKFxuICA8VmlldyBzdHlsZT17c3R5bGVzLnJvb3R9PlxuICAgIDxZZWxsb3dCb3hQcmVzc2FibGVcbiAgICAgIGJhY2tncm91bmRDb2xvcj17e1xuICAgICAgICBkZWZhdWx0OiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBwcmVzc2VkOiBZZWxsb3dCb3hTdHlsZS5nZXRIaWdobGlnaHRDb2xvcigxKSxcbiAgICAgIH19XG4gICAgICBvblByZXNzPXtwcm9wcy5vbk1pbmltaXplfVxuICAgICAgc3R5bGU9e3N0eWxlcy5idXR0b259PlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT5cbiAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5sYWJlbH0+TWluaW1pemU8L1RleHQ+XG4gICAgICA8L1ZpZXc+XG4gICAgICA8U2FmZUFyZWFWaWV3IC8+XG4gICAgPC9ZZWxsb3dCb3hQcmVzc2FibGU+XG4gICAgPFllbGxvd0JveFByZXNzYWJsZVxuICAgICAgYmFja2dyb3VuZENvbG9yPXt7XG4gICAgICAgIGRlZmF1bHQ6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgIHByZXNzZWQ6IFllbGxvd0JveFN0eWxlLmdldEhpZ2hsaWdodENvbG9yKDEpLFxuICAgICAgfX1cbiAgICAgIG9uUHJlc3M9e3Byb3BzLm9uRGlzbWlzc31cbiAgICAgIHN0eWxlPXtzdHlsZXMuYnV0dG9ufT5cbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGVudH0+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMubGFiZWx9PkRpc21pc3M8L1RleHQ+XG4gICAgICA8L1ZpZXc+XG4gICAgICA8U2FmZUFyZWFWaWV3IC8+XG4gICAgPC9ZZWxsb3dCb3hQcmVzc2FibGU+XG4gIDwvVmlldz5cbik7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgcm9vdDoge1xuICAgIGJhY2tncm91bmRDb2xvcjogWWVsbG93Qm94U3R5bGUuZ2V0QmFja2dyb3VuZENvbG9yKDAuOTUpLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICB9LFxuICBidXR0b246IHtcbiAgICBmbGV4OiAxLFxuICB9LFxuICBjb250ZW50OiB7XG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgaGVpZ2h0OiA0OCxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIH0sXG4gIGxhYmVsOiB7XG4gICAgY29sb3I6IFllbGxvd0JveFN0eWxlLmdldFRleHRDb2xvcigxKSxcbiAgICBmb250U2l6ZTogMTQsXG4gICAgaW5jbHVkZUZvbnRQYWRkaW5nOiBmYWxzZSxcbiAgICBsaW5lSGVpZ2h0OiAxOCxcbiAgfSxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFllbGxvd0JveEluc3BlY3RvckZvb3RlcjtcbiJdfQ==