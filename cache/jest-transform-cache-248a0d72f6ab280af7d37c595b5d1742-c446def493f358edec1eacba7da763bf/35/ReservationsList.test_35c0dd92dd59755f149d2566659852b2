bb47948c1de3767f7d1428d3912510b0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("react-native");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _jestMock = _interopRequireDefault(require("jest-mock"));

var _ReservationsList = _interopRequireDefault(require("../ReservationsList"));

var _ReservationsListItem = _interopRequireDefault(require("../ReservationsListItem"));

var _ButtonActionRound = _interopRequireDefault(require("../../../common/ButtonActionRound"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

describe('<ReservationsList />', function () {
  var wrapper;
  var props;
  beforeEach(function () {
    props = {
      hotels: [[{
        hotelName: 'test',
        __typename: 'Reservation',
        id: '123456',
        name: 'Andy',
        arrivalDate: '04/22/2020',
        departureDate: '04/22/9999'
      }]],
      setShowScheduler: _jestMock.default.fn()
    };
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_ReservationsList.default, props));
  });
  it('should be defined', function () {
    expect(_ReservationsList.default).toBeDefined();
  });
  it('renders correctly', function () {
    var tree = _reactTestRenderer.default.create(_react.default.createElement(_ReservationsList.default, null)).toJSON();

    expect(tree).toMatchSnapshot();
  });
  it('should have access to setShowScheduler() function', function () {
    console.log(JSON.stringify(wrapper));
    var setShowScheduler = wrapper.props()['children'][1].props.onPress;
    setShowScheduler();
    expect(setShowScheduler).toBeCalled;
    console.log(wrapper.find(_ButtonActionRound.default));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlc2VydmF0aW9uc0xpc3QudGVzdC5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIndyYXBwZXIiLCJwcm9wcyIsImJlZm9yZUVhY2giLCJob3RlbHMiLCJob3RlbE5hbWUiLCJfX3R5cGVuYW1lIiwiaWQiLCJuYW1lIiwiYXJyaXZhbERhdGUiLCJkZXBhcnR1cmVEYXRlIiwic2V0U2hvd1NjaGVkdWxlciIsImplc3QiLCJmbiIsIml0IiwiZXhwZWN0IiwiUmVzZXJ2YXRpb25zTGlzdCIsInRvQmVEZWZpbmVkIiwidHJlZSIsInJlbmRlcmVyIiwiY3JlYXRlIiwidG9KU09OIiwidG9NYXRjaFNuYXBzaG90IiwiY29uc29sZSIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJvblByZXNzIiwidG9CZUNhbGxlZCIsImZpbmQiLCJCdXR0b25BY3Rpb24iXSwibWFwcGluZ3MiOiI7O0FBSUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBRUFBLFFBQVEsQ0FBQyxzQkFBRCxFQUF5QixZQUFNO0FBQ3JDLE1BQUlDLE9BQUo7QUFDQSxNQUFJQyxLQUFKO0FBRUFDLEVBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2ZELElBQUFBLEtBQUssR0FBRztBQUNORSxNQUFBQSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBQ1JDLFFBQUFBLFNBQVMsRUFBRSxNQURIO0FBRVJDLFFBQUFBLFVBQVUsRUFBRSxhQUZKO0FBR1JDLFFBQUFBLEVBQUUsRUFBRSxRQUhJO0FBSVJDLFFBQUFBLElBQUksRUFBRSxNQUpFO0FBS1JDLFFBQUFBLFdBQVcsRUFBRSxZQUxMO0FBTVJDLFFBQUFBLGFBQWEsRUFBRTtBQU5QLE9BQUQsQ0FBRCxDQURGO0FBU05DLE1BQUFBLGdCQUFnQixFQUFFQyxrQkFBS0MsRUFBTDtBQVRaLEtBQVI7QUFZQVosSUFBQUEsT0FBTyxHQUFHLHFCQUFRLDZCQUFDLHlCQUFELEVBQXNCQyxLQUF0QixDQUFSLENBQVY7QUFDRCxHQWRTLENBQVY7QUFnQkFZLEVBQUFBLEVBQUUsQ0FBQyxtQkFBRCxFQUFzQixZQUFNO0FBQzVCQyxJQUFBQSxNQUFNLENBQUNDLHlCQUFELENBQU4sQ0FBeUJDLFdBQXpCO0FBQ0QsR0FGQyxDQUFGO0FBSUFILEVBQUFBLEVBQUUsQ0FBQyxtQkFBRCxFQUFzQixZQUFNO0FBQzVCLFFBQU1JLElBQUksR0FBR0MsMkJBQVNDLE1BQVQsQ0FBZ0IsNkJBQUMseUJBQUQsT0FBaEIsRUFBc0NDLE1BQXRDLEVBQWI7O0FBQ0FOLElBQUFBLE1BQU0sQ0FBQ0csSUFBRCxDQUFOLENBQWFJLGVBQWI7QUFDRCxHQUhDLENBQUY7QUFTQVIsRUFBQUEsRUFBRSxDQUFDLG1EQUFELEVBQXNELFlBQU07QUFDNURTLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQUwsQ0FBZXpCLE9BQWYsQ0FBWjtBQUNBLFFBQU1VLGdCQUFnQixHQUFHVixPQUFPLENBQUNDLEtBQVIsR0FBZ0IsVUFBaEIsRUFBNEIsQ0FBNUIsRUFBK0JBLEtBQS9CLENBQXFDeUIsT0FBOUQ7QUFDQWhCLElBQUFBLGdCQUFnQjtBQUNoQkksSUFBQUEsTUFBTSxDQUFDSixnQkFBRCxDQUFOLENBQXlCaUIsVUFBekI7QUFDQUwsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVl2QixPQUFPLENBQUM0QixJQUFSLENBQWFDLDBCQUFiLENBQVo7QUFDRCxHQU5DLENBQUY7QUFPRCxDQXhDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IGplc3QgZnJvbSAnamVzdC1tb2NrJztcblxuaW1wb3J0IFJlc2VydmF0aW9uc0xpc3QgZnJvbSAnLi4vUmVzZXJ2YXRpb25zTGlzdCc7XG5pbXBvcnQgUmVzZXJ2YXRpb25zTGlzdEl0ZW0gZnJvbSAnLi4vUmVzZXJ2YXRpb25zTGlzdEl0ZW0nO1xuaW1wb3J0IEJ1dHRvbkFjdGlvbiBmcm9tICcuLi8uLi8uLi9jb21tb24vQnV0dG9uQWN0aW9uUm91bmQnO1xuXG4vLyBOb3RlOiB0ZXN0IHJlbmRlcmVyIG11c3QgYmUgcmVxdWlyZWQgYWZ0ZXIgcmVhY3QtbmF0aXZlLlxuaW1wb3J0IHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuXG5kZXNjcmliZSgnPFJlc2VydmF0aW9uc0xpc3QgLz4nLCAoKSA9PiB7XG4gIGxldCB3cmFwcGVyO1xuICBsZXQgcHJvcHM7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgcHJvcHMgPSB7XG4gICAgICBob3RlbHM6IFtbe1xuICAgICAgICBob3RlbE5hbWU6ICd0ZXN0JyxcbiAgICAgICAgX190eXBlbmFtZTogJ1Jlc2VydmF0aW9uJyxcbiAgICAgICAgaWQ6ICcxMjM0NTYnLFxuICAgICAgICBuYW1lOiAnQW5keScsXG4gICAgICAgIGFycml2YWxEYXRlOiAnMDQvMjIvMjAyMCcsXG4gICAgICAgIGRlcGFydHVyZURhdGU6ICcwNC8yMi85OTk5JyxcbiAgICAgIH1dXSxcbiAgICAgIHNldFNob3dTY2hlZHVsZXI6IGplc3QuZm4oKSxcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9IHNoYWxsb3coPFJlc2VydmF0aW9uc0xpc3Qgey4uLnByb3BzfSAvPik7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYmUgZGVmaW5lZCcsICgpID0+IHtcbiAgICBleHBlY3QoUmVzZXJ2YXRpb25zTGlzdCkudG9CZURlZmluZWQoKTtcbiAgfSk7XG5cbiAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoPFJlc2VydmF0aW9uc0xpc3QgLz4pLnRvSlNPTigpO1xuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG5cbiAgLy8gaXQoJ3JlbmRlcnMgUmVzZXJ2YXRpb25zTGlzdEl0ZW0nLCAoKSA9PiB7XG4gIC8vICAgZXhwZWN0KHdyYXBwZXIuZmluZChSZXNlcnZhdGlvbnNMaXN0aXRlbSkpLnRvQmVEZWZpbmVkKCk7XG4gIC8vIH0pXG5cbiAgaXQoJ3Nob3VsZCBoYXZlIGFjY2VzcyB0byBzZXRTaG93U2NoZWR1bGVyKCkgZnVuY3Rpb24nLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkod3JhcHBlcikpO1xuICAgIGNvbnN0IHNldFNob3dTY2hlZHVsZXIgPSB3cmFwcGVyLnByb3BzKClbJ2NoaWxkcmVuJ11bMV0ucHJvcHMub25QcmVzcztcbiAgICBzZXRTaG93U2NoZWR1bGVyKCk7XG4gICAgZXhwZWN0KHNldFNob3dTY2hlZHVsZXIpLnRvQmVDYWxsZWRcbiAgICBjb25zb2xlLmxvZyh3cmFwcGVyLmZpbmQoQnV0dG9uQWN0aW9uKSk7XG4gIH0pO1xufSlcbiJdfQ==