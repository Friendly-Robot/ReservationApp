9174a82954ea6fb542b4e50725a034b5
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var Platform = require('Platform');

var React = require('React');

var StyleSheet = require('StyleSheet');

var View = require('View');

var RCTActivityIndicatorViewNativeComponent = require('RCTActivityIndicatorViewNativeComponent');

var RCTActivityIndicator = Platform.OS === 'android' ? require('ProgressBarAndroid') : RCTActivityIndicatorViewNativeComponent;
var GRAY = '#999999';

var ActivityIndicator = function ActivityIndicator(props, forwardedRef) {
  var onLayout = props.onLayout,
      style = props.style,
      restProps = (0, _objectWithoutProperties2.default)(props, ["onLayout", "style"]);
  var sizeStyle;

  switch (props.size) {
    case 'small':
      sizeStyle = styles.sizeSmall;
      break;

    case 'large':
      sizeStyle = styles.sizeLarge;
      break;

    default:
      sizeStyle = {
        height: props.size,
        width: props.size
      };
      break;
  }

  var nativeProps = (0, _objectSpread2.default)({}, restProps, {
    ref: forwardedRef,
    style: sizeStyle,
    styleAttr: 'Normal',
    indeterminate: true
  });
  return React.createElement(View, {
    onLayout: onLayout,
    style: StyleSheet.compose(styles.container, style)
  }, React.createElement(RCTActivityIndicator, nativeProps));
};

var ActivityIndicatorWithRef = React.forwardRef(ActivityIndicator);
ActivityIndicatorWithRef.displayName = 'ActivityIndicator';
ActivityIndicatorWithRef.defaultProps = {
  animating: true,
  color: Platform.OS === 'ios' ? GRAY : null,
  hidesWhenStopped: true,
  size: 'small'
};
var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});
module.exports = ActivityIndicatorWithRef;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,