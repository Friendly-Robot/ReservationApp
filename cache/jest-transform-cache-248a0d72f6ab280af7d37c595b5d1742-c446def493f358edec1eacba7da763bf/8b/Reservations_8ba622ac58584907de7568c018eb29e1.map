{"version":3,"sources":["Reservations.js"],"names":["dataValues","loading","Boolean","reservations","Array","Reservations","data","setReservations","showScheduler","setShowScheduler","styles","flex","StyleSheet","create","reservationQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAEA,IAAMA,UAAU,2BAAG;AACjBC,EAAAA,OAAO,EAAEC,OADQ;AAEjBC,EAAAA,YAAY,EAAEC;AAFG,CAAH,CAAhB;;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA;;AAAA,sCACpBA,IADoB;AAAA,MAChCL,OADgC,SAChCA,OADgC;;AAAA,sCAGA,qBAAS,IAAT,CAHA;AAAA;AAAA,MAGjCE,YAHiC;AAAA,MAGnBI,eAHmB;;AAAA,sCAIE,qBAAS,KAAT,CAJF;AAAA;AAAA,MAIjCC,aAJiC;AAAA,MAIlBC,gBAJkB;;AAAA;AAMxC,wBAAU,YAAM;AAAA;AAAA;AACd,mCAAiBH,IAAI,CAACH,YAAtB,EAAoCI,eAApC;AACD,GAFD,EAEG,CAACD,IAAI,CAACH,YAAN,CAFH;AANwC;;AAUxC,MAAI,2BAAAF,OAAO,gCAAIE,YAAY,KAAK,IAArB,CAAX,EAAsC;AAAA;AAAA;AACpC,WACE,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACC;AAApB,OACE,6BAAC,2BAAD;AAAoB,MAAA,KAAK,EAAE;AAA3B,MADF,EAEE,6BAAC,yBAAD;AAAkB,MAAA,SAAS,EAAE;AAA7B,MAFF,CADF;AAMD,GAPD;AAAA;AAAA;;AAVwC;;AAmBxC,MAAIH,aAAJ,EAAmB;AAAA;AAAA;AAAA,WAAO,6BAAC,8BAAD;AAAuB,MAAA,UAAU,EAAE,sBAAM;AAAA;AAAA;AAAA,eAAAC,gBAAgB,CAAC,KAAD,CAAhB;AAAuB;AAAhE,MAAP;AAA4E,GAA/F;AAAA;AAAA;;AAnBwC;AAsBxC,SACE,6BAAC,yBAAD;AACE,IAAA,MAAM,EAAEN,YADV;AAEE,IAAA,gBAAgB,EAAEM;AAFpB,IADF;AAMD,CA5BD;;AA8BA,IAAMC,MAAM,4BAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJA,IAAAA,IAAI,EAAE;AADF;AADyB,CAAlB,CAAH,CAAZ;;eAQe,0BAAQG,yBAAR,EAA0BT,YAA1B,C","sourcesContent":["/*\n* @flow\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { ApolloProvider, graphql } from 'react-apollo';\nimport reservationQuery from '../../graphql/queries/reservationQuery';\n\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport ReservationsHeader from './ReservationsHeader';\nimport ReservationsList from './ReservationsList';\nimport ReservationsScheduler from './ReservationsScheduler';\n\nimport sortReservations from './sortReservations';\n\nimport theme from '../../theme';\n\nconst dataValues = {\n  loading: Boolean,\n  reservations: Array,\n};\n\ntype props = {\n  data: typeof dataValues,\n};\n\nconst Reservations = ({ data }: props) => {\n  const { loading } = data;\n\n  const [reservations, setReservations] = useState(null);\n  const [showScheduler, setShowScheduler] = useState(false);\n\n  useEffect(() => {\n    sortReservations(data.reservations, setReservations);\n  }, [data.reservations]);\n\n  if (loading || reservations === null) {\n    return (\n      <View style={styles.flex}>\n        <ReservationsHeader title={'Reservations'} />\n        <LoadingIndicator textLabel={'Loading reservations'} />\n      </View>\n    );\n  }\n\n  if (showScheduler) return <ReservationsScheduler closeModal={() => setShowScheduler(false)} />;\n  \n  // TODO: Handle default view when loading has finished but reservations are empty.\n  return (\n    <ReservationsList\n      hotels={reservations}\n      setShowScheduler={setShowScheduler}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n});\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (ReservationsList here)\nexport default graphql(reservationQuery)(Reservations);"]}