0585bad7b47225bea1627ed40551b8de
'use strict';

var Image = require('Image');

var Platform = require('Platform');

var React = require('React');

var SafeAreaView = require('SafeAreaView');

var StyleSheet = require('StyleSheet');

var Text = require('Text');

var View = require('View');

var YellowBoxImageSource = require('YellowBoxImageSource');

var YellowBoxPressable = require('YellowBoxPressable');

var YellowBoxStyle = require('YellowBoxStyle');

var YellowBoxInspectorHeader = function YellowBoxInspectorHeader(props) {
  var prevIndex = props.selectedIndex - 1;
  var nextIndex = props.selectedIndex + 1;
  var titleText = props.warnings.length === 1 ? 'Single Occurrence' : "Occurrence " + (props.selectedIndex + 1) + " of " + props.warnings.length;
  return React.createElement(SafeAreaView, {
    style: styles.root
  }, React.createElement(View, {
    style: styles.header
  }, React.createElement(YellowBoxInspectorHeaderButton, {
    disabled: props.warnings[prevIndex] == null,
    image: YellowBoxImageSource.chevronLeft,
    onPress: function onPress() {
      return props.onSelectIndex(prevIndex);
    }
  }), React.createElement(View, {
    style: styles.headerTitle
  }, React.createElement(Text, {
    style: styles.headerTitleText
  }, titleText)), React.createElement(YellowBoxInspectorHeaderButton, {
    disabled: props.warnings[nextIndex] == null,
    image: YellowBoxImageSource.chevronRight,
    onPress: function onPress() {
      return props.onSelectIndex(nextIndex);
    }
  })));
};

var YellowBoxInspectorHeaderButton = function YellowBoxInspectorHeaderButton(props) {
  return React.createElement(YellowBoxPressable, {
    backgroundColor: {
      default: 'transparent',
      pressed: YellowBoxStyle.getHighlightColor(1)
    },
    onPress: props.disabled ? null : props.onPress,
    style: styles.headerButton
  }, props.disabled ? null : React.createElement(Image, {
    source: {
      height: 16,
      uri: props.image,
      width: 16
    },
    style: styles.headerButtonImage
  }));
};

var styles = StyleSheet.create({
  root: {
    backgroundColor: YellowBoxStyle.getBackgroundColor(0.95)
  },
  header: {
    flexDirection: 'row',
    height: Platform.select({
      android: 48,
      ios: 44
    })
  },
  headerButton: {
    alignItems: 'center',
    aspectRatio: 1,
    justifyContent: 'center'
  },
  headerButtonImage: {
    tintColor: YellowBoxStyle.getTextColor(1)
  },
  headerTitle: {
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center'
  },
  headerTitleText: {
    color: YellowBoxStyle.getTextColor(1),
    fontSize: 16,
    fontWeight: '600',
    includeFontPadding: false,
    lineHeight: 20
  }
});
module.exports = YellowBoxInspectorHeader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,