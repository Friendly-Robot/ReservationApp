{"version":3,"sources":["ReservationsScheduler.test.js"],"names":["describe","wrapper","closeModal","jest","fn","props","beforeEach","it","expect","ReservationsScheduler","toBeDefined","tree","renderer","create","toJSON","toMatchSnapshot","find","ButtonActionRound","length","toEqual"],"mappings":";;AAIA;;AACA;;AACA;;AACA;;AAEA;;AAKA;;AAEA;;AACA;;AAEAA,QAAQ,CAAC,2BAAD,EAA8B,YAAM;AAC1C,MAAIC,OAAJ;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,EAAL,EAAnB;AACA,MAAIC,KAAK,GAAG;AACVH,IAAAA,UAAU,EAAVA;AADU,GAAZ;AAIAI,EAAAA,UAAU,CAAC,YAAM;AACfL,IAAAA,OAAO,GAAG,mBACR,6BAAC,2BAAD;AAAgB,MAAA,MAAM,EAAE;AAAxB,OACE,6BAAC,8BAAD,EAA2BI,KAA3B,CADF,CADQ,CAAV;AAKD,GANS,CAAV;AAQAE,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAM;AAC5BC,IAAAA,MAAM,CAACC,8BAAD,CAAN,CAA8BC,WAA9B;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,mBAAD,EAAsB,YAAM;AAC5B,QAAMI,IAAI,GAAGC,2BAASC,MAAT,CACX,6BAAC,2BAAD;AAAgB,MAAA,MAAM,EAAE;AAAxB,OACE,6BAAC,8BAAD,EAA2BR,KAA3B,CADF,CADW,EAIXS,MAJW,EAAb;;AAKAN,IAAAA,MAAM,CAACG,IAAD,CAAN,CAAaI,eAAb;AACD,GAPC,CAAF;AASAR,EAAAA,EAAE,CAAC,QAAD,EAAW,YAAM;AAEjBC,IAAAA,MAAM,CAACP,OAAO,CAACe,IAAR,CAAaC,0BAAb,EAAgCC,MAAjC,CAAN,CAA+CC,OAA/C,CAAuD,CAAvD;AACD,GAHC,CAAF;AAID,CAhCO,CAAR","sourcesContent":["/**\n * @format\n */\n\nimport 'react-native';\nimport React from 'react';\nimport { mount, shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\n\nimport { ApolloProvider } from 'react-apollo';\n// import ApolloClient from 'apollo-boost';\n// import env from '../../../env';\n// import 'node-fetch';\n\nimport ErrorBoundary from '../../../utils/ErrorBoundary';\n\nimport ReservationsScheduler from '../ReservationsScheduler';\nimport ButtonActionRound from '../../../common/ButtonActionRound';\n\ndescribe('<ReservationsScheduler />', () => {\n  let wrapper;\n  const closeModal = jest.fn();\n  let props = {\n    closeModal\n  };\n\n  beforeEach(() => {\n    wrapper = mount(\n      <ApolloProvider client={{}}>\n        <ReservationsScheduler {...props} />\n      </ApolloProvider>\n    )\n  });\n\n  it('should be defined', () => {\n    expect(ReservationsScheduler).toBeDefined();\n  });\n\n  it('renders correctly', () => {\n    const tree = renderer.create(\n      <ApolloProvider client={{}}>\n        <ReservationsScheduler {...props} />\n      </ApolloProvider>\n    ).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n  it(\"mounts\", () => {\n    // console.log(wrapper.instance().state);\n    expect(wrapper.find(ButtonActionRound).length).toEqual(1);\n  });\n});\n"]}