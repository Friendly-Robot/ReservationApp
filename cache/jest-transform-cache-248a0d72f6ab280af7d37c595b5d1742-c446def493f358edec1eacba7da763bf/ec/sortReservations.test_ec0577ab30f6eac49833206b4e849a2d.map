{"version":3,"sources":["sortReservations.test.js"],"names":["global","fetch","require","it","unsortedData","hotelName","arrivalDate","sortedData","result","returnResult","sortedReservations","expect","JSON","stringify","toEqual"],"mappings":";;AAIA;;AACA;;AACA;;AAMA;;AAHAA,MAAM,CAACC,KAAP,GAAeC,OAAO,CAAC,YAAD,CAAtB;AAKAC,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,MAAMC,YAAY,GAAG,CACnB;AAAEC,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GADmB,EAEnB;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAFmB,EAGnB;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAHmB,EAInB;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAJmB,EAKnB;AAAED,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GALmB,EAMnB;AAAED,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GANmB,CAArB;AAQA,MAAMC,UAAU,GAAG,CACjB,CACE;AAAEF,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GADF,EAEE;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAFF,EAGE;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAHF,EAIE;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,WAAW,EAAE;AAApC,GAJF,CADiB,EAOjB,CACE;AAAED,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GADF,EAEE;AAAED,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GAFF,CAPiB,CAAnB;AAYA,MAAIE,MAAM,GAAG,IAAb;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,kBAAD,EAAwB;AAC3CF,IAAAA,MAAM,GAAGE,kBAAT;AACD,GAFD;;AAGA,iCAAKN,YAAL,EAAmBK,YAAnB;AACAE,EAAAA,MAAM,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAD,CAAN,CAA+BM,OAA/B,CAAuCF,IAAI,CAACC,SAAL,CAAeN,UAAf,CAAvC;AACD,CA3BC,CAAF","sourcesContent":["/**\n * @format\n */\n\nimport 'react-native';\nimport React from 'react';\nimport sort from '../sortReservations';\n\n// fetch is not found globally and no fetcher passed, to fix pass a fetch for test environment.\nglobal.fetch = require('node-fetch');\n\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\n\nit('sorts reservations correctly', () => {\n  const unsortedData = [\n    { hotelName: 'Hilton', arrivalDate: '12/30/2019'},\n    { hotelName: 'Hilton', arrivalDate: '12/28/2019'},\n    { hotelName: 'Hilton', arrivalDate: '04/30/2019'},\n    { hotelName: 'Hilton', arrivalDate: '1/30/2020'},\n    { hotelName: 'Marriot', arrivalDate: '11/21/2019'},\n    { hotelName: 'Marriot', arrivalDate: '10/30/2019'},    \n  ];\n  const sortedData = [\n    [\n      { hotelName: 'Hilton', arrivalDate: '04/30/2019'},\n      { hotelName: 'Hilton', arrivalDate: '12/28/2019'},\n      { hotelName: 'Hilton', arrivalDate: '12/30/2019'},\n      { hotelName: 'Hilton', arrivalDate: '1/30/2020'},\n    ],\n    [\n      { hotelName: 'Marriot', arrivalDate: '10/30/2019'},  \n      { hotelName: 'Marriot', arrivalDate: '11/21/2019'},\n    ]\n  ];\n  let result = null;\n  const returnResult = (sortedReservations) => {\n    result = sortedReservations;\n  }\n  sort(unsortedData, returnResult);\n  expect(JSON.stringify(result)).toEqual(JSON.stringify(sortedData));\n});\n"]}